{
	"info": {
		"_postman_id": "a52e59ba-82a1-41ae-9b32-472f577a6b92",
		"name": "PetStore_Ruslan",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27885304"
	},
	"item": [
		{
			"name": "pet",
			"item": [
				{
					"name": "Add a new pet to the store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"DuckDuckQA\");",
									"});",
									"",
									"var schema= {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"id\",",
									"        \"category\",",
									"        \"name\",",
									"        \"photoUrls\",",
									"        \"tags\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"category\": {",
									"            \"type\": \"object\",",
									"            \"required\": [",
									"                \"id\",",
									"                \"name\"",
									"            ],",
									"            \"properties\": {",
									"                \"id\": {",
									"                    \"type\": \"integer\"",
									"                },",
									"                \"name\": {",
									"                    \"type\": \"string\"",
									"                }",
									"            }",
									"        },",
									"        \"name\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"photoUrls\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"string\"",
									"            }",
									"        },",
									"        \"tags\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"required\": [",
									"                    \"id\",",
									"                    \"name\"",
									"                ],",
									"                \"properties\": {",
									"                    \"id\": {",
									"                        \"type\": \"integer\"",
									"                    },",
									"                    \"name\": {",
									"                        \"type\": \"string\"",
									"                    }",
									"                }",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"type\": \"string\"",
									"        }",
									"    }",
									"}",
									"pm.test (\"Validation.schema\", ()=>{",
									"    pm.response.to.have.jsonSchema(schema)",
									"})",
									"",
									"var serverResponce = pm.response.text();",
									"var id = serverResponce.slice(6,25);",
									"pm.environment.set(\"PetId\", id);",
									"//pm.environment.set(\"PetId\", JSON.parse(pm.response.text().replace(/\"id\":[\\s]*([\\d]+),/,'\"id\":\"$1\",')).id);",
									"",
									"/*",
									" var responseBody = pm.response.json();",
									" console.log(responseBody.id);",
									" */",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":0,\n\t\"category\": {\n\t\t\"id\": 10,\n\t\t\"name\": \"Ducks\"\n\t},\n\t\"name\": \"DuckDuckQA\",\n\t\"photoUrls\": [\n\t\t\"https://phonoteka.org/uploads/posts/2022-09/1663783076_51-phonoteka-org-p-oboi-na-telefon-skrudzh-makdak-instagram-54.jpg\",\n\t\t\"https://phonoteka.org/uploads/posts/2022-09/1664212937_14-phonoteka-org-p-skrudzh-makdak-v-zolote-oboi-instagram-15.jpg\"\n\t],\n\t\"tags\": [{\n\t\t\t\"id\": 10,\n\t\t\t\"name\": \"5%\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 11,\n\t\t\t\"name\": \"10%\"\n\t\t}\n\t],\n\t\"status\": \"sold\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/pet",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an existing pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"DuckyQA1\");",
									"});",
									"",
									"pm.test(\"Category id = 15\", function () {",
									"    var serverResponceInJson = pm.response.json();",
									"    pm.expect(serverResponceInJson.category.id).to.eql(15);",
									"});",
									"",
									"var schema= {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"id\",",
									"        \"category\",",
									"        \"name\",",
									"        \"photoUrls\",",
									"        \"tags\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"category\": {",
									"            \"type\": \"object\",",
									"            \"required\": [",
									"                \"id\",",
									"                \"name\"",
									"            ],",
									"            \"properties\": {",
									"                \"id\": {",
									"                    \"type\": \"integer\"",
									"                },",
									"                \"name\": {",
									"                    \"type\": \"string\"",
									"                }",
									"            }",
									"        },",
									"        \"name\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"photoUrls\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"string\"",
									"            }",
									"        },",
									"        \"tags\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"required\": [",
									"                    \"id\",",
									"                    \"name\"",
									"                ],",
									"                \"properties\": {",
									"                    \"id\": {",
									"                        \"type\": \"integer\"",
									"                    },",
									"                    \"name\": {",
									"                        \"type\": \"string\"",
									"                    }",
									"                }",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"type\": \"string\"",
									"        }",
									"    }",
									"}",
									" pm.test (\"Validation schema\", ()=>{",
									"     pm.response.to.have.jsonSchema(schema)",
									" })"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {{PetId}},\n    \"category\": {\n        \"id\": 15,\n        \"name\": \"Ducks\"\n    },\n    \"name\": \"DuckyQA1\",\n    \"photoUrls\": [\n        \"https://phonoteka.org/uploads/posts/2022-09/1663783076_51-phonoteka-org-p-oboi-na-telefon-skrudzh-makdak-instagram-54.jpg\",\n        \"https://phonoteka.org/uploads/posts/2022-09/1664212937_14-phonoteka-org-p-skrudzh-makdak-v-zolote-oboi-instagram-15.jpg\"\n    ],\n    \"tags\": [\n        {\n            \"id\": 10,\n            \"name\": \"5%\"\n        },\n        {\n            \"id\": 11,\n            \"name\": \"10%\"\n        }\n    ],\n    \"status\": \"available\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/pet",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find pet by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"tags\");",
									"});",
									"",
									"var schema= {",
									"    \"id\": 9223372036854753644,",
									"    \"category\": {",
									"        \"id\": 10,",
									"        \"name\": \"Ducks\"",
									"    },",
									"    \"name\": \"DuckDuckQA\",",
									"    \"photoUrls\": [",
									"        \"https://phonoteka.org/uploads/posts/2022-09/1663783076_51-phonoteka-org-p-oboi-na-telefon-skrudzh-makdak-instagram-54.jpg\",",
									"        \"https://phonoteka.org/uploads/posts/2022-09/1664212937_14-phonoteka-org-p-skrudzh-makdak-v-zolote-oboi-instagram-15.jpg\"",
									"    ],",
									"    \"tags\": [",
									"        {",
									"            \"id\": 10,",
									"            \"name\": \"5%\"",
									"        },",
									"        {",
									"            \"id\": 11,",
									"            \"name\": \"10%\"",
									"        }",
									"    ],",
									"    \"status\": \"sold\"",
									"}",
									"",
									"pm.test (\"Validation.schema\", ()=>{",
									"    pm.response.to.have.jsonSchema(schema)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/pet/{{PetId}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"pet",
								"{{PetId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Uploads an image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"png\");",
									"});",
									"var schema= {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"code\",",
									"        \"type\",",
									"        \"message\"",
									"    ],",
									"    \"properties\": {",
									"        \"code\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"type\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"message\": {",
									"            \"type\": \"string\"",
									"        }",
									"    }",
									"}",
									"pm.test (\"Validation.schema\", ()=>{",
									"    pm.response.to.have.jsonSchema(schema)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "DuckDuckGo-Symbol.png"
								}
							]
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/pet/{{PetId}}/uploadImage",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet",
								"{{PetId}}",
								"uploadImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updates a pet in the store with form data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"pm.test(\"Property code is 200\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.eql(200);",
									"});",
									"",
									"var schema= {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"code\",",
									"        \"type\",",
									"        \"message\"",
									"    ],",
									"    \"properties\": {",
									"        \"code\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"type\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"message\": {",
									"            \"type\": \"string\"",
									"        }",
									"    }",
									"}",
									"pm.test (\"Validation.schema\", ()=>{",
									"    pm.response.to.have.jsonSchema(schema)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "DuckGo1",
									"type": "text"
								},
								{
									"key": "status",
									"value": "available",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BaseUrl}}/pet/{{PetId}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"pet",
								"{{PetId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Finds Pets by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sold\");",
									"});",
									"",
									"const schema= {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"        \"required\": [",
									"            \"id\",",
									"            \"category\",",
									"            \"name\",",
									"            \"photoUrls\",",
									"            \"tags\",",
									"            \"status\"",
									"        ],",
									"        \"properties\": {",
									"            \"id\": {",
									"                \"type\": \"integer\"",
									"            },",
									"            \"category\": {",
									"                \"type\": \"object\",",
									"                \"required\": [",
									"                    \"id\",",
									"                    \"name\"",
									"                ],",
									"                \"properties\": {",
									"                    \"id\": {",
									"                        \"type\": \"integer\"",
									"                    },",
									"                    \"name\": {",
									"                        \"type\": \"string\"",
									"                    }",
									"                }",
									"            },",
									"            \"name\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"photoUrls\": {",
									"                \"type\": \"array\",",
									"                \"items\": {",
									"                    \"type\": \"string\"",
									"                }",
									"            },",
									"            \"tags\": {",
									"                \"type\": \"array\",",
									"                \"items\": {",
									"                    \"type\": \"object\",",
									"                    \"required\": [",
									"                        \"id\",",
									"                        \"name\"",
									"                    ],",
									"                    \"properties\": {",
									"                        \"id\": {",
									"                            \"type\": \"integer\"",
									"                        },",
									"                        \"name\": {",
									"                            \"type\": \"string\"",
									"                        }",
									"                    }",
									"                }",
									"            },",
									"            \"status\": {",
									"                \"type\": \"string\"",
									"            }",
									"        }",
									"    }",
									"}",
									"pm.test (\"Validation.schema\", ()=>{",
									"    pm.response.to.have.jsonSchema(schema)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/pet/findByStatus?status=sold",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "sold"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletes a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"var schema= {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"code\",",
									"        \"type\",",
									"        \"message\"",
									"    ],",
									"    \"properties\": {",
									"        \"code\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"type\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"message\": {",
									"            \"type\": \"string\"",
									"        }",
									"    }",
									"}",
									"pm.test (\"Validation.schema\", ()=>{",
									"    pm.response.to.have.jsonSchema(schema)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{BaseUrl}}/pet/{{PetId}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"pet",
								"{{PetId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "store",
			"item": [
				{
					"name": "Place an order for a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"",
									"pm.test(\"status eqls placed\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(\"placed\");",
									"});",
									"",
									"pm.test(\"complete eqls true\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.complete).to.eql(true);",
									"});",
									"",
									"const schema= {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"id\",",
									"        \"petId\",",
									"        \"quantity\",",
									"        \"shipDate\",",
									"        \"status\",",
									"        \"complete\"",
									"    ],",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"petId\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"quantity\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"shipDate\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"status\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"complete\": {",
									"            \"type\": \"boolean\"",
									"        }",
									"    }",
									"}",
									"pm.test (\"Validation.schema\", ()=>{",
									"    pm.response.to.have.jsonSchema(schema)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{OrderId}},\n  \"petId\": 1010,\n  \"quantity\": 3,\n  \"shipDate\": \"2023-06-26T14:46:43.643Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/store/order",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find purchase order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"",
									"pm.test(\"Quantity=3\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.quantity).to.eql(3);",
									"});",
									"",
									"const schema= {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"id\",",
									"        \"petId\",",
									"        \"quantity\",",
									"        \"shipDate\",",
									"        \"status\",",
									"        \"complete\"",
									"    ],",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"petId\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"quantity\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"shipDate\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"status\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"complete\": {",
									"            \"type\": \"boolean\"",
									"        }",
									"    }",
									"}",
									"pm.test (\"Validation.schema\", ()=>{",
									"    pm.response.to.have.jsonSchema(schema)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/store/order/{{OrderId}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"store",
								"order",
								"{{OrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete purchase order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"unknown\");",
									"});",
									"",
									"var schema= {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"code\",",
									"        \"type\",",
									"        \"message\"",
									"    ],",
									"    \"properties\": {",
									"        \"code\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"type\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"message\": {",
									"            \"type\": \"string\"",
									"        }",
									"    }",
									"}",
									"pm.test (\"Validation.schema\", ()=>{",
									"    pm.response.to.have.jsonSchema(schema)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/store/order/{{OrderId}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"store",
								"order",
								"{{OrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Returns pet inventories by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"",
									"",
									"pm.test(\"Status code name has OK\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"available\")",
									"});",
									"var schema= {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"sold\",",
									"        \"string\",",
									"        \"pending\",",
									"        \"available\"",
									"    ],",
									"    \"properties\": {",
									"        \"sold\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"string\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"pending\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"available\": {",
									"            \"type\": \"integer\"",
									"        }",
									"    }",
									"}",
									"",
									"pm.test (\"Validation.schema\", ()=> {",
									"    pm.response.to.have.jsonSchema(schema)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/store/inventory",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"store",
								"inventory"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "{{BaseUrl}}",
			"value": "",
			"type": "string"
		}
	]
}